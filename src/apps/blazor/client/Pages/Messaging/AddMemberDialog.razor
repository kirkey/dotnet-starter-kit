<MudDialog>
    <DialogContent>
        <MudStack Spacing="2">
            <MudText Typo="Typo.subtitle2">Select a user to add:</MudText>
            
            <MudSelect @bind-Value="_selectedUserId" Label="User" Variant="Variant.Outlined" Required>
                @if (_availableUsers != null)
                {
                    @foreach (var user in _availableUsers)
                    {
                        var isOnline = OnlineUserIds?.Contains(user.Id.ToString()) ?? false;
                        <MudSelectItem Value="@user.Id">
                            <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                <MudText>@user.Name</MudText>
                                <MudChip T="string" Size="Size.Small" 
                                         Color="@(isOnline ? Color.Success : Color.Default)"
                                         Icon="@(isOnline ? Icons.Material.Filled.Circle : Icons.Material.Outlined.Circle)">
                                    @(isOnline ? "Online" : "Offline")
                                </MudChip>
                            </MudStack>
                        </MudSelectItem>
                    }
                }
            </MudSelect>

            <MudSelect @bind-Value="_role" Label="Role" Variant="Variant.Outlined">
                <MudSelectItem Value="@("member")">Member</MudSelectItem>
                <MudSelectItem Value="@("admin")">Admin</MudSelectItem>
            </MudSelect>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Add" Disabled="@(_selectedUserId == DefaultIdType.Empty)">
            Add
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public DefaultIdType ConversationId { get; set; }
    [Parameter] public List<DefaultIdType>? ExistingMembers { get; set; }
    [Parameter] public List<UserDto>? AllUsers { get; set; }
    [Parameter] public HashSet<string>? OnlineUserIds { get; set; }

    private DefaultIdType _selectedUserId = DefaultIdType.Empty;
    private string _role = "member";
    private List<UserDto>? _availableUsers;

    protected override void OnInitialized()
    {
        // Filter out existing members from all users
        _availableUsers = AllUsers?
            .Where(u => ExistingMembers == null || !ExistingMembers.Contains(u.Id))
            .ToList() ?? new List<UserDto>();
    }

    private void Add() => MudDialog.Close(DialogResult.Ok(_selectedUserId));
    private void Cancel() => MudDialog.Cancel();
}

