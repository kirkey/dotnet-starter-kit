@page "/store/cycle-counts"

<PageHeader Title="@Context.EntityNamePlural" />

<EntityTable @ref="_table" TEntity="CycleCountResponse" TId="DefaultIdType" TRequest="CycleCountViewModel" Context="@Context">
    <ExtraActions Context="entity">
        <MudMenu Icon="@Icons.Material.Filled.MoreVert" Size="Size.Small" Dense="true">
            <MudMenuItem OnClick="@(() => StartCycleCount(entity.Id))">
                <MudIcon Icon="@Icons.Material.Filled.PlayArrow" Size="Size.Small" Class="mr-2" /> Start
            </MudMenuItem>
            <MudMenuItem OnClick="@(() => CompleteCycleCount(entity.Id))">
                <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Size="Size.Small" Class="mr-2" /> Complete
            </MudMenuItem>
            <MudMenuItem OnClick="@(() => ReconcileCycleCount(entity.Id))">
                <MudIcon Icon="@Icons.Material.Filled.Sync" Size="Size.Small" Class="mr-2" /> Reconcile
            </MudMenuItem>
            <MudMenuItem OnClick="@(() => AddCycleCountItem(entity.Id))">
                <MudIcon Icon="@Icons.Material.Filled.Add" Size="Size.Small" Class="mr-2" /> Add Item
            </MudMenuItem>
        </MudMenu>
    </ExtraActions>
    <EditFormContent Context="context">
        <MudItem xs="12" md="6">
            <MudTextField @bind-Value="context.CountNumber" For="@(() => context.CountNumber)" Label="Count Number" Required />
        </MudItem>
        
        <MudItem xs="12" md="6">
            <MudAutocomplete T="DefaultIdType" @bind-Value="context.WarehouseId" For="@(() => context.WarehouseId)"
                             Label="Warehouse" Required
                             SearchFunc="@SearchWarehouses"
                             ToStringFunc="@(id => _warehouses.FirstOrDefault(w => w.Id == id)?.Name ?? string.Empty)" />
        </MudItem>
        
        <MudItem xs="12" md="6">
            <MudAutocomplete T="DefaultIdType?" @bind-Value="context.WarehouseLocationId" For="@(() => context.WarehouseLocationId)"
                             Label="Warehouse Location (Optional)"
                             SearchFunc="@SearchWarehouseLocations"
                             ToStringFunc="@(id => id.HasValue ? _warehouseLocations.FirstOrDefault(l => l.Id == id)?.Name ?? string.Empty : string.Empty)" />
        </MudItem>
        
        <MudItem xs="12" md="6">
            <MudDatePicker @bind-Date="context.ScheduledDate" For="@(() => context.ScheduledDate)" Label="Scheduled Date" Required />
        </MudItem>
        
        <MudItem xs="12" md="6">
            <MudTextField @bind-Value="context.CountType" For="@(() => context.CountType)" Label="Count Type" Placeholder="Full, Partial, Spot" />
        </MudItem>
        
        <MudItem xs="12" md="6">
            <MudTextField @bind-Value="context.CounterName" For="@(() => context.CounterName)" Label="Counter Name" />
        </MudItem>
        
        <MudItem xs="12" md="6">
            <MudTextField @bind-Value="context.SupervisorName" For="@(() => context.SupervisorName)" Label="Supervisor Name" />
        </MudItem>
        
        <MudItem xs="12">
            <MudTextField @bind-Value="context.Notes" For="@(() => context.Notes)" Label="Notes" Lines="3" />
        </MudItem>
    </EditFormContent>
</EntityTable>
