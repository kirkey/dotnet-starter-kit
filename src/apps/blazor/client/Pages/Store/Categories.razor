@page "/store/categories"
@using FSH.Starter.Blazor.Client.Components.Autocompletes.Store

<PageHeader Title="Categories" Header="Store Categories" SubHeader="Manage your store categories." />

<EntityTable @ref="_table" TEntity="CategoryResponse" TId="DefaultIdType" TRequest="CategoryViewModel" Context="@Context">

    <EditFormContent Context="context">
        @if (!Context.AddEditModal.IsCreate)
        {
            <MudItem xs="12" md="6">
                <MudTextField Value="context.Id" Underline=false ReadOnly Label="Category Id" />
            </MudItem>
        }
        <MudItem xs="12" md="6">
            <AutocompleteCategoryId @bind-Value="context.ParentCategoryId"
                                  For="@(() => context.ParentCategoryId)"
                                  Label="Parent Category">
            </AutocompleteCategoryId>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="Code" For="@(() => context.Code)" @bind-Value="context.Code" Required="true" />
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="Name" For="@(() => context.Name)" @bind-Value="context.Name" Required="true" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudNumericField T="int?" Label="Sort Order" @bind-Value="context.SortOrder" Immediate="true" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudSwitch T="bool?" @bind-Value="context.IsActive" Color="Color.Primary">Active</MudSwitch>
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Description" For="@(() => context.Description)" @bind-Value="context.Description" Lines="3" />
        </MudItem>

        <!-- Image Management -->
        <MudItem xs="12">
            <MudPaper Class="pa-3">
                <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
                    <MudStack Class="mr-4" Justify="Justify.Center" AlignItems="AlignItems.Center">
                        @if (GetImagePreviewUrl(context) is { } previewUrl)
                        {
                            <img src="@previewUrl" alt="Category image" style="max-width:200px;max-height:200px;border-radius:8px;object-fit:cover;" />
                        }
                        else
                        {
                            <MudIcon Icon="@Icons.Material.Outlined.Image" Size="Size.Large" Color="Color.Default" />
                            <MudText Typo="Typo.caption">No image</MudText>
                        }
                    </MudStack>
                    <MudStack Spacing="1">
                        <InputFile OnChange="@(e => OnImageSelected(e, context))" />
                        <MudButton Color="Color.Error"
                                   Disabled="@(string.IsNullOrWhiteSpace(context.ImageUrl) && string.IsNullOrWhiteSpace(context.Image?.Data))"
                                   OnClick="@(() => RemoveImage(context))" Variant="Variant.Outlined">
                            Remove Image
                        </MudButton>
                        @if (!string.IsNullOrWhiteSpace(context.ImageUrl))
                        {
                            <MudText Typo="Typo.caption">Current file: @context.ImageUrl</MudText>
                        }
                    </MudStack>
                </MudStack>
            </MudPaper>
        </MudItem>
    </EditFormContent>

</EntityTable>
