<MudTable Items="@_items" Dense="true" Hover="true" Loading="@_loading" Class="mt-4">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Cycle Count Items</MudText>
        <MudSpacer />
        @if (CycleCountId != default && _canEdit)
        {
            <MudButton StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="@AddItemAsync" Variant="Variant.Filled">
                Add Item
            </MudButton>
        }
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Item</MudTh>
        <MudTh>SKU</MudTh>
        <MudTh Style="text-align: right">System Qty</MudTh>
        <MudTh Style="text-align: right">Counted Qty</MudTh>
        <MudTh Style="text-align: right">Variance</MudTh>
        <MudTh>Count Date</MudTh>
        <MudTh>Counted By</MudTh>
        <MudTh Style="text-align: center">Status</MudTh>
        <MudTh Style="text-align: center">Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Item">@GetItemName(context.ItemId)</MudTd>
        <MudTd DataLabel="SKU">@GetItemSKU(context.ItemId)</MudTd>
        <MudTd DataLabel="System Qty" Style="text-align: right">@context.SystemQuantity</MudTd>
        <MudTd DataLabel="Counted Qty" Style="text-align: right">
            @if (context.CountedQuantity.HasValue)
            {
                @context.CountedQuantity.Value
            }
            else
            {
                <MudChip T="string" Size="Size.Small" Color="Color.Warning">Not Counted</MudChip>
            }
        </MudTd>
        <MudTd DataLabel="Variance" Style="text-align: right">
            @if (context.VarianceQuantity.HasValue)
            {
                var variance = context.VarianceQuantity.Value;
                var color = variance == 0 ? Color.Success : (variance > 0 ? Color.Info : Color.Error);
                <MudChip T="string" Size="Size.Small" Color="@color">
                    @(variance > 0 ? "+" : "")@variance
                </MudChip>
            }
            else
            {
                <span>-</span>
            }
        </MudTd>
        <MudTd DataLabel="Count Date">
            @(context.CountDate.HasValue ? context.CountDate.Value.ToString("MM/dd/yyyy HH:mm") : "-")
        </MudTd>
        <MudTd DataLabel="Counted By">@(context.CountedBy ?? "-")</MudTd>
        <MudTd DataLabel="Status" Style="text-align: center">
            @if (context.RequiresRecount)
            {
                <MudChip T="string" Size="Size.Small" Color="Color.Warning">Recount Required</MudChip>
            }
            else if (context.CountedQuantity.HasValue)
            {
                <MudChip T="string" Size="Size.Small" Color="Color.Success">Counted</MudChip>
            }
            else
            {
                <MudChip T="string" Size="Size.Small" Color="Color.Default">Pending</MudChip>
            }
        </MudTd>
        <MudTd DataLabel="Actions" Style="text-align: center">
            @if (_canEdit)
            {
                <MudTooltip Text="Record Count">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" OnClick="@(() => RecordCountAsync(context))" />
                </MudTooltip>
            }
        </MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText>No items added yet. Click "Add Item" to begin counting.</MudText>
    </NoRecordsContent>
</MudTable>
