<MudDialog>
    <DialogContent>
        <MudContainer Style="max-height: 70vh; overflow-y: auto;">
            @if (_loading)
            {
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            }
            else if (_cycleCount != null)
            {
                <MudGrid>
                    <MudItem xs="12">
                        <MudText Typo="Typo.h5" Class="mb-4">Cycle Count Details</MudText>
                    </MudItem>

                    <MudItem xs="12">
                        <MudSimpleTable Dense="true" Style="margin-bottom: 1rem;">
                            <tbody>
                                <tr>
                                    <td style="width: 35%; font-weight: 500;">Count Number</td>
                                    <td><strong>@_cycleCount.CountNumber</strong></td>
                                </tr>
                                <tr>
                                    <td style="font-weight: 500;">Status</td>
                                    <td>
                                        <MudChip T="string" Size="Size.Small" Color="@GetStatusColor(_cycleCount.Status)">
                                            @_cycleCount.Status
                                        </MudChip>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="font-weight: 500;">Warehouse</td>
                                    <td><strong>@_cycleCount.WarehouseName</strong></td>
                                </tr>
                                @if (!string.IsNullOrEmpty(_cycleCount.WarehouseLocationName))
                                {
                                    <tr>
                                        <td style="font-weight: 500;">Location</td>
                                        <td>@_cycleCount.WarehouseLocationName</td>
                                    </tr>
                                }
                                <tr>
                                    <td style="font-weight: 500;">Count Type</td>
                                    <td>@_cycleCount.CountType</td>
                                </tr>
                                <tr>
                                    <td style="font-weight: 500;">Scheduled Date</td>
                                    <td>@_cycleCount.CountDate.ToString("MMMM dd, yyyy")</td>
                                </tr>
                                @if (_cycleCount.StartDate.HasValue)
                                {
                                    <tr>
                                        <td style="font-weight: 500;">Started</td>
                                        <td>@_cycleCount.StartDate?.ToString("MMMM dd, yyyy HH:mm")</td>
                                    </tr>
                                }
                                @if (_cycleCount.CompletedDate.HasValue)
                                {
                                    <tr>
                                        <td style="font-weight: 500;">Completed</td>
                                        <td>@_cycleCount.CompletedDate?.ToString("MMMM dd, yyyy HH:mm")</td>
                                    </tr>
                                }
                                @if (!string.IsNullOrEmpty(_cycleCount.CountedBy))
                                {
                                    <tr>
                                        <td style="font-weight: 500;">Counted By</td>
                                        <td>@_cycleCount.CountedBy</td>
                                    </tr>
                                }
                                <tr>
                                    <td style="font-weight: 500;">Total Items</td>
                                    <td><strong>@_cycleCount.TotalItems</strong></td>
                                </tr>
                                <tr>
                                    <td style="font-weight: 500;">Items Counted</td>
                                    <td>
                                        <MudChip T="string" Size="Size.Small" Color="Color.Info">
                                            @_cycleCount.CountedItems
                                        </MudChip>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="font-weight: 500;">Items with Variance</td>
                                    <td>
                                        <MudChip T="string" Size="Size.Small" Color="@(_cycleCount.VarianceItems > 0 ? Color.Warning : Color.Success)">
                                            @_cycleCount.VarianceItems
                                        </MudChip>
                                    </td>
                                </tr>
                                @if (!string.IsNullOrEmpty(_cycleCount.Notes))
                                {
                                    <tr>
                                        <td style="font-weight: 500;">Notes</td>
                                        <td>@_cycleCount.Notes</td>
                                    </tr>
                                }
                            </tbody>
                        </MudSimpleTable>
                    </MudItem>

                    <MudItem xs="12">
                        <MudDivider Class="my-4" />
                    </MudItem>

                    <MudItem Class="pa-2" xs="12">
                        <CycleCountItems CycleCountId="@CycleCountId" 
                                        CycleCountStatus="@_cycleCount.Status" 
                                        OnItemsChanged="@HandleItemsChanged" />
                    </MudItem>
                </MudGrid>
            }
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private Color GetStatusColor(string status)
    {
        return status switch
        {
            "Scheduled" => Color.Default,
            "InProgress" => Color.Info,
            "Completed" => Color.Success,
            "Cancelled" => Color.Error,
            _ => Color.Default
        };
    }
}
