// <auto-generated />
using System;
using Accounting.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FSH.Starter.WebApi.Migrations.MySQL.Accounting
{
    [DbContext(typeof(AccountingDbContext))]
    [Migration("20250902022539_AccountingTables")]
    partial class AccountingTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("accounting")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Accounting.Domain.AccountingPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdjustmentPeriod")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("PeriodType")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FiscalYear", "PeriodType")
                        .IsUnique();

                    b.ToTable("AccountingPeriods", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Accrual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AccrualDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AccrualNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Amount")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsReversed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<DateTime?>("ReversalDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Accruals", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Budget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BudgetType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<Guid>("PeriodId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<decimal>("TotalActualAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBudgetedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Budgets", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.ChartOfAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<int>("AccountLevel")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<bool>("AllowDirectPosting")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsControlAccount")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsUsoaCompliant")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("NormalBalance")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("ParentCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("RegulatoryClassification")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("SubAccountOf")
                        .HasColumnType("char(36)");

                    b.Property<string>("UsoaCategory")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("AccountCode")
                        .IsUnique();

                    b.ToTable("ChartOfAccounts", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Consumption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BillingPeriod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("CurrentReading")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsValidReading")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("KWhUsed")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("MeterId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("Multiplier")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<decimal>("PreviousReading")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReadingSource")
                        .HasColumnType("longtext");

                    b.Property<string>("ReadingType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Consumption", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BillingAddress")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("CreditLimit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RevenueAccountCode")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("RevenueAccountName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Terms")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCode")
                        .IsUnique();

                    b.ToTable("Customers", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.DeferredRevenue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeferredRevenueNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsRecognized")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<DateTime>("RecognitionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RecognizedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("DeferredRevenues", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.DepreciationEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FixedAssetId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Method")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FixedAssetId");

                    b.ToTable("DepreciationEntry", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.DepreciationMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CalculationFormula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MethodCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.HasKey("Id");

                    b.ToTable("DepreciationMethods", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.FixedAsset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccumulatedDepreciationAccountId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("AssetUsoaId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("Capacity")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("CurrentBookValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("DepreciationExpenseAccountId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DepreciationMethodId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<decimal?>("DisposalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DisposalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<string>("GpsCoordinates")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDisposed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastMaintenanceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext");

                    b.Property<string>("ModelNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<DateTime?>("NextMaintenanceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RegulatoryClassification")
                        .HasColumnType("longtext");

                    b.Property<bool>("RequiresUsoaReporting")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("SalvageValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ServiceLife")
                        .HasColumnType("int");

                    b.Property<string>("SubstationName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("VoltageRating")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("Id");

                    b.ToTable("FixedAssets", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.FuelConsumption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("BtuContent")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("ConsumptionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEmergencyFuel")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<Guid>("PowerPlantId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("QuantityUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("SulfurContent")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("SupplierId")
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalCost")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("UnitCost")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("Id");

                    b.ToTable("FuelConsumptions", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.GeneralLedger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Credit")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("Debit")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<Guid>("EntryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Memo")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<Guid?>("PeriodId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsoaClass")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GeneralLedgers", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("BasicServiceCharge")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("BillingPeriod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ConsumptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("DemandCharge")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal?>("DepositAmount")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("KWhUsed")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("LateFee")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<decimal>("OtherCharges")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("RateSchedule")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("ReconnectionFee")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TaxAmount")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("UsageCharge")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("Id");

                    b.ToTable("Invoices", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.InvoiceLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccountCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLineItem", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.JournalEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<decimal>("OriginalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("PeriodId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostingBatchId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("PostingBatchId");

                    b.HasIndex("ReferenceNumber")
                        .IsUnique();

                    b.ToTable("JournalEntries", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("CurrentBalance")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MailingAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MemberNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("MeterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("RateSchedule")
                        .HasColumnType("longtext");

                    b.Property<string>("ServiceAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ServiceClass")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Members", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Meter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("AccuracyClass")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("CommunicationProtocol")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<string>("GpsCoordinates")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsSmartMeter")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastMaintenanceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("LastReading")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime?>("LastReadingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("char(36)");

                    b.Property<string>("MeterConfiguration")
                        .HasColumnType("longtext");

                    b.Property<string>("MeterNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MeterType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Multiplier")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<DateTime?>("NextCalibrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Meters", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.MeterReading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("MeterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ReadBy")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Reading")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReadingType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MeterId");

                    b.ToTable("MeterReading", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Payee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("ExpenseAccountCode")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("ExpenseAccountName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("PayeeCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tin")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PayeeCode")
                        .IsUnique();

                    b.ToTable("Payees", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.PostingBatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("BatchDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<Guid?>("PeriodId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PostingBatches", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("ActualCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualRevenue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BudgetedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClientName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("ProjectManager")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Projects", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.RegulatoryReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("AllowedReturn")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("AuditDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditFirm")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FilingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<decimal?>("NetIncome")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<DateTime>("PeriodEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PeriodStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PreparedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("RateBase")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RegulatoryBody")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReportingPeriod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("RequiresAudit")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReviewedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Draft");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("TotalAssets")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalEquity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalExpenses")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLiabilities")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalRevenue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DueDate");

                    b.HasIndex("RegulatoryBody");

                    b.HasIndex("ReportName")
                        .IsUnique();

                    b.HasIndex("ReportType");

                    b.HasIndex("Status");

                    b.HasIndex("PeriodStartDate", "PeriodEndDate");

                    b.ToTable("RegulatoryReports", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("BillingAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeletedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("ExpenseAccountCode")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ExpenseAccountName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1024)
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Terms")
                        .HasColumnType("longtext");

                    b.Property<string>("Tin")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Vendors", "accounting");
                });

            modelBuilder.Entity("Accounting.Domain.Budget", b =>
                {
                    b.OwnsMany("Accounting.Domain.BudgetLine", "BudgetLines", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("AccountId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("ActualAmount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<Guid>("BudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("BudgetedAmount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Description")
                                .HasMaxLength(500)
                                .HasColumnType("varchar(500)");

                            b1.HasKey("Id");

                            b1.HasIndex("BudgetId");

                            b1.ToTable("BudgetLines", "accounting");

                            b1.WithOwner()
                                .HasForeignKey("BudgetId");
                        });

                    b.Navigation("BudgetLines");
                });

            modelBuilder.Entity("Accounting.Domain.DepreciationEntry", b =>
                {
                    b.HasOne("Accounting.Domain.FixedAsset", null)
                        .WithMany("DepreciationEntries")
                        .HasForeignKey("FixedAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Accounting.Domain.InvoiceLineItem", b =>
                {
                    b.HasOne("Accounting.Domain.Invoice", null)
                        .WithMany("LineItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Accounting.Domain.JournalEntry", b =>
                {
                    b.HasOne("Accounting.Domain.PostingBatch", null)
                        .WithMany("JournalEntries")
                        .HasForeignKey("PostingBatchId");

                    b.OwnsMany("Accounting.Domain.JournalEntryLine", "Lines", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("AccountId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("CreditAmount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("DebitAmount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Description")
                                .HasColumnType("longtext");

                            b1.Property<Guid>("JournalEntryId")
                                .HasColumnType("char(36)");

                            b1.HasKey("Id");

                            b1.HasIndex("JournalEntryId");

                            b1.ToTable("JournalEntryLines", "accounting");

                            b1.WithOwner()
                                .HasForeignKey("JournalEntryId");
                        });

                    b.Navigation("Lines");
                });

            modelBuilder.Entity("Accounting.Domain.MeterReading", b =>
                {
                    b.HasOne("Accounting.Domain.Meter", null)
                        .WithMany("Readings")
                        .HasForeignKey("MeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Accounting.Domain.Project", b =>
                {
                    b.OwnsMany("Accounting.Domain.JobCostingEntry", "CostingEntries", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("AccountId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Category")
                                .HasColumnType("longtext");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<Guid?>("JournalEntryId")
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("char(36)");

                            b1.HasKey("Id");

                            b1.HasIndex("ProjectId");

                            b1.ToTable("JobCostingEntries", "accounting");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.Navigation("CostingEntries");
                });

            modelBuilder.Entity("Accounting.Domain.FixedAsset", b =>
                {
                    b.Navigation("DepreciationEntries");
                });

            modelBuilder.Entity("Accounting.Domain.Invoice", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("Accounting.Domain.Meter", b =>
                {
                    b.Navigation("Readings");
                });

            modelBuilder.Entity("Accounting.Domain.PostingBatch", b =>
                {
                    b.Navigation("JournalEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
